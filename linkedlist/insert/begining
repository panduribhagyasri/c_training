#include <stdio.h>
#include <stdlib.h>
struct node
{
    int data;
    struct node *next;

}*head= NULL;
struct node* insertAtBeginning(struct node *head, int newValue )
{
    struct node *newnode =(struct node*)malloc(sizeof(struct node));
    newNode->data = newVAlue;
    if(head ==NULL)
    {
        newNode->next = NULL;
        head = newNode;
    }
    else{
        newNode->next = head;
        head = newNode;
    }
    return head;
}
int main() {
    for (int i=1;i<=5;i++)
        head = insertAtBeginning(head,rand()%100);

    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    
    return 0;
}

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//chat box one
struct node* insertAtBeginning(struct node *head,int newValue) //Optimized logic
{
    struct node *newNode = (struct node*) malloc(sizeof(struct node));
    newNode->data = newValue;
    newNode->next = head;
    return newNode;
}
---------------------------
#include <stdio.h>
#include <stdlib.h>
struct node
{
    int data;
    struct node *next;

}*head= NULL;
struct node* insertAtBeginning(struct node *head, int newValue )
{
    struct node *newnode =(struct node*)malloc(sizeof(struct node));
    newNode->data = newVAlue;
    newNode->next = head;
   
    return newnode;
}

int main() {
    for (int i=1;i<=5;i++)
        head = insertAtBeginning(head,rand()%100);

    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    
    return 0;
}
